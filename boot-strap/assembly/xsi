#!/bin/bash

######################
# Jvm App Initializer
######################
user=""
APP_HOME=/mnt/ballpark/workspace
#APP_HOME=/app
USER_HOME=$APP_HOME/$user
SCRIPT_HOME=$USER_HOME/scripts
NEXUS_URL=http://10.0.1.34:8081/nexus
BASH_RC=$USER_HOME/.bashrc
WORK_SPACE=$USER_HOME/workspace
BOOTSTRAP_VERSION=
BOOTSTRAP_URL="$NEXUS_URL/service/local/repositories/releases/content/be/urpi/software/xsi/node/main-script/$BOOTSTRAP_VERSION/main-script-$BOOTSTRAP_VERSION.zip"

######################
# FUNCTIONS
######################
function set_environments {
    USER_HOME=$APP_HOME/$user
    SCRIPT_HOME=$USER_HOME/scripts
    NEXUS_URL=http://10.0.1.34:8081/nexus
    BASH_RC=$USER_HOME/.bashrc
}

function set_nexus_environment {
    WORK_SPACE=$USER_HOME/workspace
    BOOTSTRAP_URL="$NEXUS_URL/service/local/repositories/releases/content/be/urpi/software/xsi/node/main-script/$BOOTSTRAP_VERSION/main-script-$BOOTSTRAP_VERSION.zip"
}
function set_user {
    user=$1
    set_environments
}

function make_app_dir {
    mkdir -p $APP_HOME
}

function init_bashrc {
    echo "export PATH=$PATH:$SCRIPT_HOME" >> $BASH_RC
    echo "export USER_HOME=$USER_HOME" >> $BASH_RC
    echo "export SCRIPT_HOME=$SCRIPT_HOME" >> $BASH_RC
    echo "export NEXUS_URL=$NEXUS_URL" >> $BASH_RC
    echo "export WORK_SPACE=$WORK_SPACE" >> $BASH_RC
}

function init_user {
    addgroup jvmapp
    adduser --home $USER_HOME $user
    usermod -aG jvmappdocker $user
}

function init_workspace {
    if [[ ! -d $WORK_SPACE ]]; then
        mkdir $WORK_SPACE
    fi
}

function update_installer {
    BOOTSTRAP_VERSION=$2
    set_nexus_environment
    echo $1
    echo $2
    set_environments
    init_workspace
    cd $WORK_SPACE
    wget $BOOTSTRAP_URL
    scriptName="main-script-$BOOTSTRAP_VERSION.zip"
    unzip $scriptName
}

function check_parameters {
    if [[ $? == '-u' ]] ; then
       set_user $2
    elif [[ $? == 'b' ]]; then
        set_nexus_environment
    fi
}

function delete_user {
    sudo userdel
}
function screen_options {
    echo "XSI Node install version 19.6.1"
    i=0

    while [[ ${i} -eq 0 ]]
    do
        echo "Install (i) or update (u) or delete (d)"
        read option1

        if [[ "$option1" == "u" ]]; then
            echo "user:"
            read user
            echo "version"
            read version
            update_installer $user $version
            i=1
        elif [[ "$option1" == "i" ]]; then
            echo "install"
            i=1
        elif [[ "$option1" == "d" ]]; then
            echo "user:"
            read user

            i=1
        fi
    done
}
function __main__ {
    screen_options
#    set_user $1 $2
#    make_app_dir
#    init_user
#    init_bashrc
#    make_workspace
}

######################
# MAIN
######################

__main__
